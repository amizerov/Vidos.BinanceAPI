<style>
    #tvchart{
        height: 100%;
    }
</style>
<div id="tvchart"></div>

<!-- Link to libraries -->
<script src="https://unpkg.com/lightweight-charts/dist/lightweight-charts.standalone.production.js"></script>
<script src="https://code.jquery.com/jquery-1.7.2.min.js"></script>

<!-- Create Chert object -->
<script>

    
    var chart = LightweightCharts.createChart(tvchart, {
        layout: {
            backgroundColor: '#253248',
            textColor: 'rgba(255, 255, 255, 0.9)',
        },
        grid: {
            vertLines: {
                color: '#334158',
            },
            horzLines: {
                color: '#334158',
            },
        },
        crosshair: {
            mode: LightweightCharts.CrosshairMode.Normal,
        },
        priceScale: {
            borderColor: '#485c7b',
        },
        timeScale: {
            borderColor: '#485c7b',
        },
    });

    chart.applyOptions({
        timeScale: {
            rightOffset: 12,
            barSpacing: 3,
            fixLeftEdge: false,
            rightBarStaysOnScroll: false,
            borderVisible: false,
            borderColor: '#fff000',
            visible: true,
            timeVisible: true,
            secondsVisible: false        }
        }
    );

    // Make Chart Responsive with screen resize
    new ResizeObserver(entries => {
        const r = entries[0].contentRect;
        chart.applyOptions({ height: r.height, width: r.width });
        setTimeout(() => {
            chart.timeScale().fitContent();
        }, 0);        
    }).observe(tvchart);
</script>

<script>
    var candleSeries = chart.addCandlestickSeries();
    var volumeSeries = chart.addHistogramSeries({
        color: '#26a69a',
        priceFormat: {
            type: 'volume',
        },
        priceScaleId: '',
        scaleMargins: {
            top: 0.8,
            bottom: 0,
        },
    });
    getKlinesBina("BTCUSDT", 1, 50);

    //////////////////////
    function getKlinesBina(sym, inl, lim) {

        //Get data from Binance
        var url = "https://api.binance.com/api/v3/klines?"
                    + "symbol=" + sym + "&interval=" + inl + "m&limit=" + lim;

        $.getJSON(url, function (data) {
            
            // Parse data to Candles array
            var Candles = JSON.parse(JSON.stringify(data));
            DrowChart(Candles);
        });

        function DrowChart(candles) {
            // Re-format Candles to Trading View Price data
            var priceData = candles.map(c => 
                ({ time: c[0]/1000, open: c[1], high: c[2], low: c[3], close: c[4] }));
            // Set Price data for chart
            candleSeries.setData(priceData);

            // Get data for Volumes chart
            // Volume bars are individually coloured with 'color' prop.
            const gre = 'rgba(75, 255, 181, 0.4)';
            const red = 'rgba(255, 73, 118, 0.4)';
            var volumData = candles.map(c => 
                ({ time: c[0]/1000, value: c[5], color: c[1] > c[4] ? red : gre}));
            volumeSeries.setData(volumData);

            chart.timeScale().applyOptions({ fixLeftEdge: true });
            chart.timeScale().applyOptions({ fixRightEdge: true });
        }
    }
</script>
<!-- API Binance Socket: Последняя свеча - получение данных -->
<script>
    var binaSocket = null;

    function SetSocket(sym) {
        var s = sym.toLowerCase();
        var wsUrl = "wss://stream.binance.com:9443/ws/" + s + "@kline_1m";

        if (binaSocket != null)
            binaSocket.send(JSON.stringify({ method: "unsubscribe", topic: "kline_1m" }));

        binaSocket = new WebSocket(wsUrl);
        binaSocket.onmessage = function (event) {
            var obj = JSON.parse(event.data);
            if (obj.error) return;
            var k = obj.k;

            var i = ohlc.length - 1;
            if (ohlc[i].x <= Date.now() + 1000) {
                getKlinesBina(CurrentSymbol, CurrentInterval, CurrentLimit);
            }
            else {
                ohlc[i].c = k.c;
                ohlc[i].h = k.h;
                ohlc[i].l = k.l;
                vols[i] = k.v;

                setChart();
            }
        };
    }
</script>
