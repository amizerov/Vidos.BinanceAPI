<!--
 Получаю уже, предварительно отсортированный писок торговых пар со своего сервера,
 где данные получаются с Binance, Kucoin и Huobi с помощью библиотек на языке C#,
 при этом производится анализ ликвидности пар и данные сохраняются в БД.
-->

<!-- Стили -->
<style>
    .symbols {
        width: 9em;
        height: 31em;
        line-height: 2em;
        border: 1px solid #ccc;
        padding: 10px;
        overflow: scroll;
        overflow-x: hidden;
    }

        .symbols li {
            border-top: 1px solid #ccc;
            cursor: pointer;
            padding-left: 5px;
        }

            .symbols li:hover {
                background-color: lightgray;
            }

    .selected {
        background-color: lightgray;
    }

    .BinaTable {
        width: 900px;
    }

        .BinaTable td {
            padding: 10px;
        }

        .BinaTable .head td {
            text-align: center;
            border: ridge;
            font-size: larger;
            font: bold;
            background-color: lightgray;
        }

    .btnPanel {
        padding-top: 10px;
    }

        .btnPanel div {
            display: inline-block;
        }

    .bntInterval {
    }

        .bntInterval div {
            width: 50px;
            border: outset;
            display: inline-block;
            cursor: pointer;
        }

            .bntInterval div:hover {
                background-color: lightgray;
            }

    .pressed {
        background-color: lightgray;
        border: inset !important;
    }

    .Limit {
        float: right;
    }

        .Limit div {
            width: 33px;
            border: outset;
            float: right;
            cursor: pointer;
            text-align: center;
        }

            .Limit div:hover {
                background-color: lightgray;
            }

    #lim {
        width: 50px;
        float: right;
        padding-bottom: 5px;
        margin-right: 5px;
        margin-left: 5px;
        text-align: center;
    }

    select {
        font: 18px arial, veranda;
        padding: 5px;
    }

    #filterSymbol {
        width: 9em;
    }
</style>

<!-- Разметка -->
<center>
    <table class="BinaTable" border="1">
        <tr class="head">
            <td width="1%">
                <select id="Exchange" onchange="ExChan()">
                    <option>Binance</option>
                    <option>Kucoin</option>
                    <option>Huobi</option>
                </select>
            </td>
            <td>Open / Close</td>
            <td>High / Low</td>
            <td>Volume / Close time</td>
        </tr>
        <tr>
            <td rowspan="2" valign="top">
                <input id="filterSymbol" />
                <div class="info"><ul class="symbols"></ul></div>
            </td>
            <td width="205px" valign="top">
                <div id="opncls"></div>
            </td>
            <td width="205px" valign="top">
                <div id="higlow"></div>
            </td>
            <td width="205px" valign="top" align="right">
                <div id="volclt"></div>
            </td>
        </tr>
        <tr>
            <td colspan="3" valign="top">
                <center><h1 id="symbol"></h1></center>
                <div id="chartPlace">
                    <canvas id="csChart" width="900" height="350"></canvas>
                    <canvas id="voChart" width="900" height="80"></canvas>
                </div>
                <div class="btnPanel">
                    <div class="bntInterval">
                        <div id="b1" onclick="bntInt_Clicked(1)">1m</div>
                        <div id="b3" onclick="bntInt_Clicked(3)">3m</div>
                        <div id="b5" onclick="bntInt_Clicked(5)">5m</div>
                        <div id="b15" onclick="bntInt_Clicked(15)">15m</div>
                        <div id="b30" onclick="bntInt_Clicked(30)">30m</div>
                        <div id="b60" onclick="bntInt_Clicked(60)">1h</div>
                    </div>
                    <div class="Limit">
                        <div id="plus5" onclick="setLim(5)">+</div>
                        <input id="lim" value="15" />
                        <div id="minus5" onclick="setLim(-5)">-</div>
                    </div>
                </div>
            </td>
        </tr>
    </table>
</center>

<!-- jQuery: подключение библиотеки расширения для JsvaScript -->
<script src="https://code.jquery.com/jquery-1.7.2.min.js"></script>

<!-- Глобальные переменные и начальные значения -->
<script>
    var CurrentExchange = 1; // Binance
    var CurrentSymbol = "BTCUSDT";
    var CurrentInterval = "1m";
    var CurrentLimit = parseInt($("#lim").val());

    $(() => {
        getSymbols(1);
        sel(0, CurrentSymbol);
        $("#b1").addClass("pressed");
    });
</script>

<!-- Управление параметрами графика -->
<script>
    // Вызывается при изменении выбора Биржи в комбооксе
    function ExChan() {
        var e = 1, ex = $('#Exchange option:selected').text();
        switch (ex) {
            case "Binance":
                e = 1; break;
            case "Kucoin":
                e = 2; break;
            default:
                e = 3;
        }
        // Получение отсортированного по ликвидности списка символов
        getSymbols(e);
    }

    // Колличество свечей
    function setLim(d) {
        if (CurrentLimit >= 50 && d > 0 || CurrentLimit <= 5 && d < 0) return;
        CurrentLimit += parseInt(d);
        $("#lim").val(CurrentLimit);
        getKlinesBina(CurrentSymbol, CurrentInterval, CurrentLimit);
    }

    // Интервал свечи на графике
    function bntInt_Clicked(n) {
        $(".bntInterval div").removeClass("pressed");
        $("#b" + n).addClass("pressed");
        CurrentInterval = n < 60 ? n + "m" : "1h";
        getKlinesBina(CurrentSymbol, CurrentInterval, CurrentLimit);
    }
</script>

<!-- Фильтр символов -->
<script>
    $("#filterSymbol").on("keyup", function (ev) {
        var texto = $(this).val();
        filtro(texto);
    });

    function filtro(texto) {
        $(".info ul li").hide().filter(function () {
            var item = $(this).text();
            var padrao = new RegExp(texto, "i");
            return padrao.test(item);
        }).closest("li").show();
    }
</script>

<!-- Выбор символа -->
<script>
    function sel(i, symbol) {
        CurrentSymbol = symbol;
        $("#symbol").html(symbol);
        $(".symbols li").removeClass("selected");
        $("#id" + i).addClass("selected");
        getKlinesBina(CurrentSymbol, CurrentInterval, CurrentLimit);
        bbb(symbol);
    }
</script>

<!-- Получение отсортированного по ликвидности списка пар
     с любой из 3-х бирж по параметру из своей БД через свой Web API -->
<script>
    function getSymbols(ex) {
        var url = "https://cryptoalert.mizerov.com/api/Products/" + ex;

        //Обращение за данными на свой сервер
        $.getJSON(url, function (data) {

            //Парсинг - преобразование полученных данных в объект
            var paras = JSON.parse(JSON.stringify(data));

            //Очистить список
            $(".symbols").html("");

            //Заполнение списка символов в листбокс
            $.each(paras, function (i, symInfo) {
                var sym = symInfo.symbol.replace("-", "");
                var sli = "<li id=id" + i + " onclick=\"sel(" + i + ", '" + sym + "')\">" + sym + "</li>";
                $(".symbols").append(sli);
            });
        });
    }
</script>

<!-- API Binance: Свечи - получение данных -->
<script>
    function getKlinesBina(sym, inl, lim) {
        var url = "https://api.binance.com/api/v3/klines?"
            + "symbol=" + sym + "&interval=" + inl + "&limit=" + lim;

        $.getJSON(url, function (data) {
            var Candles = JSON.parse(JSON.stringify(data));
            setCandleStickChart(Candles);
            var LastCandle = Candles[0];
            $("#opncls").html(LastCandle[1] + " / " + LastCandle[4]);
            $("#higlow").html(LastCandle[2] + " / " + LastCandle[3]);
        });
    }
</script>

<!-- API Binance Socket: Последняя свеча - получение данных -->
<script>
    var binaSocket = null;

    function bbb(sym) {
        var s = sym.toLowerCase();
        var wsUrl = "wss://stream.binance.com:9443/ws/" + s + "@kline_1m";

        if (binaSocket != null)
            binaSocket.send(JSON.stringify({ method: "unsubscribe", topic: "kline_1m" }));

        binaSocket = new WebSocket(wsUrl);
        binaSocket.onmessage = function (event) {
            var obj = JSON.parse(event.data);
            if (obj.error) return;
            var k = obj.k;
            $("#opncls").html(k.o + " / " + k.c);
            $("#higlow").html(k.h + " / " + k.l);
            $("#volclt").html(k.v + " / " + (new Date(k.T + 1)).toLocaleTimeString().substr(0, 5));

            var i = ohlc.length - 1;
            if (ohlc[i].x <= Date.now() + 1000) {
                getKlinesBina(CurrentSymbol, CurrentInterval, CurrentLimit);
            }
            else {
                ohlc[i].c = k.c;
                ohlc[i].h = k.h;
                ohlc[i].l = k.l;
                vols[i] = k.v;

                setChart();
            }
        };
    }
</script>

<!-- График: подключение библиотек для финансового графика -->
<script src="https://cdn.jsdelivr.net/npm/chart.js@^3"></script>
<script src="https://cdn.jsdelivr.net/npm/luxon@^2"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-luxon@^1"></script>
<script src="../chartjs/financial.js"></script>

<!-- График: подготовка данных -->
<script>
    var ohlc = [];
    var vols = [];
    var lbls = [];

    function setCandleStickChart(candles) {

        ohlc = [];
        vols = [];
        lbls = [];
        $.each(candles, function (i, candle) {
            var t = candle[6];
            var d = new Date(t + 1);
            var s = d.toLocaleTimeString().substr(0, 5);
            ohlc.push(
                {
                    x: d.valueOf(),
                    o: candle[1],
                    h: candle[2],
                    l: candle[3],
                    c: candle[4]
                }
            );
            lbls.push(s);
            vols.push(candle[5]);
        });

        setChart();
    }
</script>

<!-- График: отрисовка -->
<script>
    var csChart = null;
    var voChart = null;

    function setChart() {

        Chart.defaults.plugins.legend.display = false;

        //if (csChart instanceof Chart) csChart.destroy();
        //if (voChart instanceof Chart) voChart.destroy();
        // По хорошему не хочет оищатьсья Канвас
        // Делаем по плохому
        $('#csChart').remove();
        $('#voChart').remove();
        $('#chartPlace').append('<canvas id="csChart" width="900" height="350"></canvas>');
        $('#chartPlace').append('<canvas id="voChart" width="900" height="80"></canvas>');

        const ctx1 = document.getElementById('csChart').getContext('2d');
        const ctx2 = document.getElementById('voChart').getContext('2d');

        csChart = new Chart(ctx1, {
            type: 'candlestick',
            data: {
                datasets: [{
                    data: ohlc
                }]
            },
            options: {
                animation: false,
                scales: {
                    x: {
                        ticks: {
                            display: false,
                        }
                    },
                    y: {
                        ticks: {
                            display: false,
                        }
                    }
                }
            }
        });
        voChart = new Chart(ctx2, {
            type: 'bar',
            data: {
                labels: lbls,
                datasets: [{
                    data: vols
                }]
            },
            options: {
                animation: false,
                scales: {
                    y: {
                        ticks: {
                            display: false,
                        }
                    }
                }
            }
        });
    }
</script>
