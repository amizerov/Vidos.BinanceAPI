<!-- Стили -->
<style>
    .symbols {
        width: 10em;
        height: 40em;
        line-height: 2em;
        border: 1px solid #ccc;
        padding: 10px;
        overflow: scroll;
        overflow-x: hidden;
    }

        .symbols li {
            border-top: 1px solid #ccc;
            cursor: pointer;
            padding-left: 5px;
        }

            .symbols li:hover {
                background-color: lightgray;
            }

    .selected {
        background-color: lightgray;
    }

    .BinaTable {
        width: 823px;
    }

        .BinaTable td {
            padding: 10px;
        }

        .BinaTable .head td {
            text-align: center;
            border: ridge;
            font-size: larger;
            font: bold;
            background-color: lightgray;
        }
</style>

<!-- Разметка -->
<center>
    <table class="BinaTable" border="1">
        <tr class="head"><td>Symbol</td><td>Open / Close</td><td>High / Low</td><td>Volume / Close time</td></tr>
        <tr>
            <td rowspan="2" valign="top">
                <input class="filterSymbol" />
                <div class="info"><ul class="symbols" /></div>
            </td>
            <td width="205px" valign="top">
                <div id="opncls" />
            </td>
            <td width="205px" valign="top">
                <div id="higlow" />
            </td>
            <td width="205px" valign="top" align="right">
                <div id="volclt" />
            </td>
        </tr>
        <tr>
            <td colspan="3" valign="top">
                <center><h1 id="symbol" /></center>
                <canvas id="csChart" width="500" height="400"></canvas>
                <canvas id="voChart" width="500" height="100"></canvas>
            </td>
        </tr>
    </table>
</center>

<!-- Получение данных через API Binance -->
<script src="https://code.jquery.com/jquery-1.7.2.min.js"></script>
<script>
    var binaSocket = null;
    var url = "https://api.binance.com/api/v1/exchangeInfo";
    $.getJSON(url, function (data) {

        var info = JSON.parse(JSON.stringify(data));

        $.each(info.symbols, function (i, symInfo) {
            var sym = symInfo.symbol;
            var sli = "<li id=id" + i + " onclick=\"sel(" + i + ", '" + sym + "')\">" + sym + "</li>";
            $(".symbols").append(sli);
        });

    });
    function sel(i, symbol) {
        $("#symbol").html(symbol);
        $(".symbols li").removeClass("selected");
        $("#id" + i).addClass("selected");
        ddd(symbol);
        bbb(symbol);
    }
    function ddd(sym) {
        var url = "https://api.binance.com/api/v3/klines?symbol=" + sym + "&interval=1m&limit=10";
        $.getJSON(url, function (data) {
            var Candles = JSON.parse(JSON.stringify(data));
            setCandleStickChart(Candles);
            var LastCandle = Candles[0];
            $("#opncls").html(LastCandle[1] + " / " + LastCandle[4]);
            $("#higlow").html(LastCandle[2] + " / " + LastCandle[3]);
        });
    }
    function bbb(sym) {
        var s = sym.toLowerCase();
        var wsUrl = "wss://stream.binance.com:9443/ws/" + s + "@kline_1m";

        if (binaSocket != null)
            binaSocket.send(JSON.stringify({ method: "unsubscribe", topic: "kline_1m" }));

        binaSocket = new WebSocket(wsUrl);
        binaSocket.onmessage = function (event) {
            var obj = JSON.parse(event.data);
            if (obj.error) return;
            var k = obj.k;
            $("#opncls").html(k.o + "/" + k.c);
            $("#higlow").html(k.h + "/" + k.l);
            $("#volclt").html(k.v + "/" + (new Date(k.T + 1)).toLocaleTimeString().substr(0, 5));

            var i = ohlc.length - 1;
            if (ohlc[i].x <= Date.now()+1000) {
                ddd(sym);
            }
            else {
                ohlc[i].c = k.c;
                ohlc[i].h = k.h;
                ohlc[i].l = k.l;
                vols[i] = k.v;

                setChart();
            }
        };
    }
</script>

<!-- Фильтр символов -->
<script>
    $(".filterSymbol").on("keyup", function (ev) {
        var texto = $(this).val();
        filtro(texto);
    });

    function filtro(texto) {
        $(".info ul li").hide().filter(function () {
            var item = $(this).text();
            var padrao = new RegExp(texto, "i");
            return padrao.test(item);
        }).closest("li").show();
    }
</script>

<!-- График -->
<script src="https://cdn.jsdelivr.net/npm/chart.js@^3"></script>
<script src="https://cdn.jsdelivr.net/npm/luxon@^2"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-luxon@^1"></script>
<script src="chartjs/chartjs-chart-financial.js"></script>
<script>
    var ohlc = [];
    var vols = [];
    var lbls = [];

    function setCandleStickChart(candles) {

        ohlc = [];
        vols = [];
        lbls = [];
        $.each(candles, function (i, candle) {
            var t = candle[6];
            var d = new Date(t + 1);
            var s = d.toLocaleTimeString().substr(0, 5);
            ohlc.push(
                {
                    x: d.valueOf(),
                    o: candle[1],
                    h: candle[2],
                    l: candle[3],
                    c: candle[4]
                }
            );
            lbls.push(s);
            vols.push(candle[5]);
        });

        setChart();
    }
</script>
<script>
    var csChart = null;
    var voChart = null;

    function setChart() {

        Chart.defaults.plugins.legend.display = false;

        const ctx1 = document.getElementById('csChart').getContext('2d');
        const ctx2 = document.getElementById('voChart').getContext('2d');

        if (csChart != null) csChart.destroy();
        if (voChart != null) voChart.destroy();

        csChart = new Chart(ctx1, {
            type: 'candlestick',
            data: {
                datasets: [{
                    data: ohlc
                }]
            },
            options: {
                animation: false,
                scales: {
                    x: {
                        ticks: {
                            display: false,
                        }
                    },
                    y: {
                        ticks: {
                            display: false,
                        }
                    }
                }
            }
        });
        voChart = new Chart(ctx2, {
            type: 'bar',
            data: {
                labels: lbls,
                datasets: [{
                    data: vols
                }]
            },
            options: {
                animation: false,
                scales: {
                    y: {
                        ticks: {
                            display: false,
                        }
                    }
                }
            }
        }); 
    }
</script>
